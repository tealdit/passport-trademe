{
  "name": "Passport-trademe",
  "tagline": "Trade Me authentication strategy for Passport forked from Tumunu/passport-trademe",
  "body": "# passport-trademe\r\n\r\n[Trade Me](http://www.trademe.co.nz) authentication strategy for [Passport](http://passportjs.org/).\r\n\r\n## Installation\r\n\r\n### Installing passport-trademe\r\n```bash\r\n  # if you want to install original repo\r\n  [sudo] npm install passport-trademe\r\n  \r\n  # or for this updated FORK install like this:\r\n  # where 1.0.0.1 = {{release number}}. Look for the latest release from above\r\n  npm install https://github.com/tealdit/passport-trademe/archive/1.0.0.1.tar.gz --save\r\n  \r\n  # or all latest commits\r\n  npm install https://github.com/tealdit/passport-trademe/tarball/master --save\r\n  \r\n```\r\n\r\n## Usage\r\n\r\nVery simple ...\r\n\r\n``` js\r\nvar express = require('express')\r\n    , session = require('express-session')\r\n    , passport = require( 'passport' )\r\n    , TrademeStrategy = require( 'passport-trademe' ).Strategy\r\n    , trademeConfig = require( './keys/trademeConfig' )\r\n    , app = express()\r\n    ;\r\n    \r\n    ... \r\n    \r\npassport.use(new TrademeStrategy({\r\n        consumerKey         : trademeConfig.consumerKey\r\n        , consumerSecret    : trademeConfig.consumerSecret\r\n        , callbackURL       : trademeConfig.callbackURL\r\n    }\r\n    , function( token, tokenSecret, profile, done ) {\r\n        profile.trademe_token = token;\r\n        profile.trademe_token_secret = tokenSecret;\r\n        return done(null, profile);\r\n    }\r\n));\r\n\t\r\n\t...\r\n\t\r\n\tapp.configure( function() {\r\n\t\tapp.use( passport.initialize() );\r\n\t\tapp.use( passport.session() );\r\n\t} );\r\n```\r\n\r\n### Content of ./keys/trademeConfig.js\r\n```js\r\n/**\r\n * Expose constructors.\r\n */\r\nvar apiBaseUrl      = 'https://api.trademe.co.nz/v1/';\r\nvar oAuthBaseUrl    = 'https://secure.trademe.co.nz/Oauth/';\r\n\r\nvar env = 'staging';\r\nswitch (env){\r\n    case 'staging':\r\n        apiBaseUrl      = 'https://api.tmsandbox.co.nz/v1/';\r\n        oAuthBaseUrl    = 'https://secure.tmsandbox.co.nz/Oauth/';\r\n        break;\r\n    default:\r\n}\r\nmodule.exports = {\r\n    consumerKey     : 'E11122CC33C3F159ADF1CB1B6217',\r\n    consumerSecret  : 'F33456645479B111B44386EC085A7C',\r\n    apiBaseUrl      : apiBaseUrl,\r\n    oAuthBaseUrl    : oAuthBaseUrl,\r\n    callbackURL     : 'http://127.0.0.1:3000/auth/trademe/callback'\r\n};\r\n```\r\n\r\nDefine you \"conversation\" routes ...\r\n\r\n```js\r\n\tapp.get( '/auth/trademe'\r\n\t\t, passport.authenticate( 'trademe'\r\n\t\t\t, { \r\n\t\t\t\t// Add the scope of your application here\r\n\t\t\t\tscope: [ 'MyTradeMeRead'\r\n\t\t\t\t\t, 'MyTradeMeWrite'\r\n\t\t\t\t\t, 'BiddingAndBuying' ] \r\n\t\t\t} \r\n\t\t)\r\n\t\t, function( req, res ) {\r\n\t\t\t// Nothing to do here. The \"conversation\" will end at the callback route.\r\n\t\t} );\r\n\t\r\n\tapp.get( '/auth/trademe/callback' \r\n\t\t, passport.authenticate( 'trademe' \r\n\t\t\t, {\r\n\t\t\t\tfailureRedirect: '/login'\r\n\t\t\t}\r\n\t\t)\r\n\t\t, function( req, res ) {\r\n\t\t\tres.redirect( '/' );\r\n\t\t} );\r\n```\r\n\r\nUse to protect something ...\r\n\r\n```js\r\n\tfunction ensureAuthenicated = function( req, res, next ) {\r\n\t\tif ( req.isAuthenticated() ) { \r\n\t\t\treturn next(); \r\n\t\t}\r\n\t\tres.redirect( '/login' )\r\n\t}\r\n\t\r\n\t...\r\n\t\r\n\tapp.get( '/someProtectedResource'\r\n\t\t, ensureAuthenticated\r\n\t\t, function ( req, res ) {\r\n\t\t\tres.redirect( '/' );\r\n\t\t} );\r\n```\r\n\r\n## Authors: \r\n\r\n* [Cleave Pokotea](https://github.com/Tumunu)\r\n* [Damodar Bashyal](http://dltr.org)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}